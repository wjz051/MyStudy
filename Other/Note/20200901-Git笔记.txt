本地初始化：git add

项目级别/仓库级别： 仅在当前本地库范围内有效
git config user.name wujianzheng
git config user.email 422358883@qq.com
信息保存位置： ./.git/config 文件

系统用户级别： 登录当前操作系统的用户范围
git config --global user.name wujianzheng
git config --global user.email 422358883@qq.com
信息保存位置： ~/.gitconfig 文件

级别优先级
 就近原则： 项目级别优先于系统用户级别， 二者都有时采用项目级别的签名
 如果只有系统用户级别的签名， 就以系统用户级别的签名为准
 二者都没有不允许


状态查看：git status

添加：git add [file name]

撤销：git rm --cached [file name]

提交：git commit -m "commit message" [file name]

查看历史：git log  git reflog

git log --oneline


前进后退：本质，基于索引值操作  git reset --hard [局部索引值]
reset参数解析：--soft：仅在本地移动HEADA指针   --mixed：移动本地库HEAD指针、重置暂存区    --hard：移动本地库HEAD指针、重置暂存区、重置工作区


删除文件并找回：git reset --hard [指针位置]


比较文件差异：git diff [file name] 将工作区文件和暂存区进行比较  
git diff [本地库中历史版本] [file name] 将工作区文件和本地库历史记录比较


分支操作

创建分支：git branch [分支名]
查看分支：git branch -v
切换分支：git chechout [分支名]
创建+切换分支：git checkout -b <name>
创建+切换远程分支：git checkout -b <name> origin/<name>
合并某分支到当前分支：git merge <name>
删除分支：git branch -D <name>

合并分支：1、切换到接受修改的分支 git checkout [被合并分支名]  2、执行merge  git merge [有新内容分支名]

解决冲突：1、编辑解决问题。2、git add [file name]。3、git commit -m "日志信息"

当前分支wjz被修改，master分支被人提交修改
1，在wjz分支merge，会产生冲突，解决冲突，切换到master分支，merge分支wjz.
2，切换到master分支，merge分支wjz，会产生冲突，解决冲突，切换回wjz分支，merge分支master



GitHub远程仓库

创建远程仓库别名：git remote add [别名] [远程地址]
查看当前所有远程地址别名：git remote -v

推送：git push [别名] [分支名]

克隆：git clone origin

拉取：pull=fetch+merge
 git fetch [远程库地址别名] [远程分支名]
 
 git diff FETCH_HEAD 查看fetch后代码和本地有什么不同。
 
 git merge [远程库地址别名] [远程分支名]
 git pull [远程库地址别名] [远程分支名]
 
 
 
 SSH登录
	进入当前用户的家目录：cd ~
	删除.ssh目录：rm -rvf .ssh
	运行命令生成.ssh密钥目录：ssh-keygen -t rsa -C 422358883@qq.com
	进入.ssh目录，查看文件列表：cd .ssh  ls -lF
	查看id_rsa.pub文件内容：cat id_rsa.pub
	复制内容，登录GitHub，输入密钥信息。
	回到Git bash 创建远程仓库地址别名：git remote add origin_ssh [远程库地址]

 
 





































